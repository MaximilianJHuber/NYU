diff --git a/.ipynb_checkpoints/Macro PS 5-checkpoint.ipynb b/.ipynb_checkpoints/Macro PS 5-checkpoint.ipynb
index eee3d04..02f2023 100644
--- a/.ipynb_checkpoints/Macro PS 5-checkpoint.ipynb	
+++ b/.ipynb_checkpoints/Macro PS 5-checkpoint.ipynb	
@@ -788,7 +788,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 6,
+   "execution_count": 3,
    "metadata": {
     "collapsed": false
    },
@@ -799,27 +799,19 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 222,
+   "execution_count": 4,
    "metadata": {
     "collapsed": false,
     "scrolled": true
    },
    "outputs": [
     {
-     "name": "stderr",
-     "output_type": "stream",
-     "text": [
-      "WARNING: Method definition Howard_solve(QuantEcon.LQ, Array{T<:Any, 2}) in module Main at In[211]:3 overwritten at In[222]:3.\n",
-      "WARNING: Method definition #Howard_solve(Array{Any, 1}, Main.#Howard_solve, QuantEcon.LQ, Array{T<:Any, 2}) in module Main overwritten.\n"
-     ]
-    },
-    {
      "data": {
       "text/plain": [
        "Howard_solve (generic function with 1 method)"
       ]
      },
-     "execution_count": 222,
+     "execution_count": 4,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -861,12 +853,12 @@
    "metadata": {},
    "source": [
     "5.3\n",
-    "--"
+    "--\n"
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": 212,
+   "execution_count": 58,
    "metadata": {
     "collapsed": false,
     "scrolled": false
@@ -874,45 +866,68 @@
    "outputs": [],
    "source": [
     "#Q::ScalarOrArray, R::ScalarOrArray, A::ScalarOrArray,B::ScalarOrArray,C::ScalarOrArray,N::ScalarOrArray,bet::ScalarOrArray=1.0\n",
-    "β=0.05; r=β^(-1) - 1; b=30; γ=1; ρ1=1.1; ρ2=-0.3;\n",
+    "β=0.05; r=β^(-1) - 1; b=30; γ=1.; ρ1=1.2; ρ2=-0.3;\n",
     "\n",
-    "lq = LQ(1., [0 0 0 sqrt(γ*r); 0 0 0 sqrt(γ); 0 0 0 0; sqrt(γ*r) sqrt(γ) 0 0], \n",
-    "        [1+r 1 0 -b; 0 ρ1 ρ2 0; 0 1 0 0; 0 0 0 1], [-1.; 0; 0; 0], [0.; 0; 0; 0], [0 0 0 -γ], β);"
+    "lq = LQ(1.+γ, [γ*r^2 r*γ 0 -r*b*γ; r*γ γ 0 -b*γ; 0 0 0 0; -r*b*γ -b*γ 0 b*γ], \n",
+    "        [1+r 1 0 -b; 0 ρ1 ρ2 0; 0 1 0 0; 0 0 0 1], [-1.; 0; 0; 0], [0.; 0; 0; 0], [-r -1 0 -1], β);"
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": 279,
+   "execution_count": 59,
    "metadata": {
     "collapsed": false,
-    "scrolled": true
+    "scrolled": false
    },
    "outputs": [
     {
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      "  0.000289 seconds (1.93 k allocations: 172.859 KB)\n"
+      "  0.000288 seconds (1.43 k allocations: 129.359 KB)\n"
      ]
     },
     {
      "data": {
       "text/plain": [
        "(\n",
-       "[389.801 20.5233 0.943516 -559.26; 20.5054 1.08148 0.043673 -28.6516; 0.92683 0.043673 0.0542998 -1.01412; -599.259 -30.7849 -1.09074 875.184],\n",
+       "[1893.27 98.8719 -1.67173 -1721.54; 100.253 5.70778 0.306118 -97.2285; -1.37632 0.274965 0.28586 -3.96359; -2923.86 -163.792 -7.26108 1895.52],\n",
        "\n",
-       "[-19.0239 -1.00859 0.0150244 29.8518],\n",
+       "[-19.7828 -1.05016 0.0153427 30.2594],\n",
        "\n",
        "[0.0])"
       ]
      },
-     "execution_count": 279,
+     "execution_count": 59,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "@time (P,F,d) = Howard_solve(lq,[-16 -0.8 0.1 20])"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 60,
+   "metadata": {
+    "collapsed": false
+   },
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "1×4 Array{Float64,2}:\n",
+       " -0.00095359  -0.00406846  0.00269027  0.286788"
+      ]
+     },
+     "execution_count": 60,
      "metadata": {},
      "output_type": "execute_result"
     }
    ],
    "source": [
-    "@time Howard_solve(lq,[-16 -0.8 0.1 20])"
+    "Fold-F"
    ]
   },
   {
@@ -931,7 +946,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 301,
+   "execution_count": 61,
    "metadata": {
     "collapsed": false,
     "scrolled": true
@@ -941,21 +956,21 @@
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      "  0.000364 seconds (991 allocations: 157.406 KB)\n"
+      "  0.000325 seconds (991 allocations: 157.406 KB)\n"
      ]
     },
     {
      "data": {
       "text/plain": [
        "(\n",
-       "[380.0 20.0899 -0.301348 -615.412; 20.0899 1.06211 -0.0159317 -31.7218; -0.301348 -0.0159317 0.000238976 0.479283; -615.412 -31.7218 0.479283 1010.52],\n",
+       "[380.0 20.1967 -0.30295 -1220.0; 20.1967 1.07353 -0.0162429 -64.8419; -0.30295 -0.0162429 0.00046046 0.972628; -1220.0 -64.8419 0.972628 1989.47],\n",
        "\n",
-       "[-19.0 -1.00449 0.0150674 29.9885],\n",
+       "[-19.0 -1.00936 0.0144262 30.0],\n",
        "\n",
        "0.0)"
       ]
      },
-     "execution_count": 301,
+     "execution_count": 61,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -973,7 +988,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 302,
+   "execution_count": 62,
    "metadata": {
     "collapsed": false
    },
@@ -982,10 +997,10 @@
      "data": {
       "text/plain": [
        "1×4 Array{Float64,2}:\n",
-       " 19.0  1.00449  -0.0150674  -29.9885"
+       " 19.0  1.00936  -0.0144262  -30.0"
       ]
      },
-     "execution_count": 302,
+     "execution_count": 62,
      "metadata": {},
      "output_type": "execute_result"
     }
diff --git a/Macro PS 5.ipynb b/Macro PS 5.ipynb
index eee3d04..8577f63 100644
--- a/Macro PS 5.ipynb	
+++ b/Macro PS 5.ipynb	
@@ -788,7 +788,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 6,
+   "execution_count": 3,
    "metadata": {
     "collapsed": false
    },
@@ -799,27 +799,19 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 222,
+   "execution_count": 4,
    "metadata": {
     "collapsed": false,
     "scrolled": true
    },
    "outputs": [
     {
-     "name": "stderr",
-     "output_type": "stream",
-     "text": [
-      "WARNING: Method definition Howard_solve(QuantEcon.LQ, Array{T<:Any, 2}) in module Main at In[211]:3 overwritten at In[222]:3.\n",
-      "WARNING: Method definition #Howard_solve(Array{Any, 1}, Main.#Howard_solve, QuantEcon.LQ, Array{T<:Any, 2}) in module Main overwritten.\n"
-     ]
-    },
-    {
      "data": {
       "text/plain": [
        "Howard_solve (generic function with 1 method)"
       ]
      },
-     "execution_count": 222,
+     "execution_count": 4,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -861,12 +853,12 @@
    "metadata": {},
    "source": [
     "5.3\n",
-    "--"
+    "--\n"
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": 212,
+   "execution_count": 63,
    "metadata": {
     "collapsed": false,
     "scrolled": false
@@ -874,45 +866,21 @@
    "outputs": [],
    "source": [
     "#Q::ScalarOrArray, R::ScalarOrArray, A::ScalarOrArray,B::ScalarOrArray,C::ScalarOrArray,N::ScalarOrArray,bet::ScalarOrArray=1.0\n",
-    "β=0.05; r=β^(-1) - 1; b=30; γ=1; ρ1=1.1; ρ2=-0.3;\n",
+    "β=0.05; r=β^(-1) - 1; b=30; γ=1.; ρ1=1.2; ρ2=-0.3;\n",
     "\n",
-    "lq = LQ(1., [0 0 0 sqrt(γ*r); 0 0 0 sqrt(γ); 0 0 0 0; sqrt(γ*r) sqrt(γ) 0 0], \n",
-    "        [1+r 1 0 -b; 0 ρ1 ρ2 0; 0 1 0 0; 0 0 0 1], [-1.; 0; 0; 0], [0.; 0; 0; 0], [0 0 0 -γ], β);"
+    "lq = LQ(1.+γ, [γ*r^2 r*γ 0 -r*b*γ; r*γ γ 0 -b*γ; 0 0 0 0; -r*b*γ -b*γ 0 b*γ], \n",
+    "        [1+r 1 0 -b; 0 ρ1 ρ2 0; 0 1 0 0; 0 0 0 1], [-1.; 0; 0; 0], [0.; 0; 0; 0], [-r -1 0 -1], β);"
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": 279,
+   "execution_count": null,
    "metadata": {
-    "collapsed": false,
-    "scrolled": true
+    "collapsed": true
    },
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "  0.000289 seconds (1.93 k allocations: 172.859 KB)\n"
-     ]
-    },
-    {
-     "data": {
-      "text/plain": [
-       "(\n",
-       "[389.801 20.5233 0.943516 -559.26; 20.5054 1.08148 0.043673 -28.6516; 0.92683 0.043673 0.0542998 -1.01412; -599.259 -30.7849 -1.09074 875.184],\n",
-       "\n",
-       "[-19.0239 -1.00859 0.0150244 29.8518],\n",
-       "\n",
-       "[0.0])"
-      ]
-     },
-     "execution_count": 279,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
+   "outputs": [],
    "source": [
-    "@time Howard_solve(lq,[-16 -0.8 0.1 20])"
+    "@time (P,F,d) = stationary_values(lq)"
    ]
   },
   {
@@ -931,7 +899,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 301,
+   "execution_count": 77,
    "metadata": {
     "collapsed": false,
     "scrolled": true
@@ -941,21 +909,21 @@
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      "  0.000364 seconds (991 allocations: 157.406 KB)\n"
+      "  0.000406 seconds (991 allocations: 157.406 KB)\n"
      ]
     },
     {
      "data": {
       "text/plain": [
        "(\n",
-       "[380.0 20.0899 -0.301348 -615.412; 20.0899 1.06211 -0.0159317 -31.7218; -0.301348 -0.0159317 0.000238976 0.479283; -615.412 -31.7218 0.479283 1010.52],\n",
+       "[380.0 20.1967 -0.30295 -1220.0; 20.1967 1.07353 -0.0162429 -64.8419; -0.30295 -0.0162429 0.00046046 0.972628; -1220.0 -64.8419 0.972628 1989.47],\n",
        "\n",
-       "[-19.0 -1.00449 0.0150674 29.9885],\n",
+       "[-19.0 -1.00936 0.0144262 30.0],\n",
        "\n",
        "0.0)"
       ]
      },
-     "execution_count": 301,
+     "execution_count": 77,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -973,7 +941,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 302,
+   "execution_count": 67,
    "metadata": {
     "collapsed": false
    },
@@ -982,10 +950,10 @@
      "data": {
       "text/plain": [
        "1×4 Array{Float64,2}:\n",
-       " 19.0  1.00449  -0.0150674  -29.9885"
+       " 19.0  1.00936  -0.0144262  -30.0"
       ]
      },
-     "execution_count": 302,
+     "execution_count": 67,
      "metadata": {},
      "output_type": "execute_result"
     }